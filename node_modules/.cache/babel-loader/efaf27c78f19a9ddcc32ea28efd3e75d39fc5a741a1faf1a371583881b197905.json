{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\App\\\\App.js\";\nimport \"./App.css\";\n\n// import react-router-dom\nimport { Route, Switch, BrowserRouter as Router, Redirect } from \"react-router-dom\";\n\n// import pages\nimport Home from \"../Pages/Home\";\nimport Room from \"../Pages/Room\";\nimport SingleRoom from \"../Pages/SingleRoom\";\nimport Register from \"../Pages/Register\";\nimport Login from \"../Pages/Login\";\nimport Admin from \"../Pages/Admin\";\nimport Error from \"../Pages/Error\";\nimport EditUser from \"../Pages/EditUser\";\n\n// import components\nimport Navbar from \"../Components/Navbar/Navbar\";\nimport Footer from \"../Components/Footer/Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const userRole = localStorage.getItem(\"role\");\n  const isAdmin = userRole === \"ADMIN\";\n  console.log(\"role\", userRole);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: isAdmin ? /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/rooms/\",\n          component: Room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/rooms/:slug\",\n          component: SingleRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          component: EditUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:email\",\n          component: EditUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: Error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Switch","BrowserRouter","Router","Redirect","Home","Room","SingleRoom","Register","Login","Admin","Error","EditUser","Navbar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","userRole","localStorage","getItem","isAdmin","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","component","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/App/App.js"],"sourcesContent":["import \"./App.css\";\r\n\r\n// import react-router-dom\r\nimport {\r\n  Route,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n// import pages\r\nimport Home from \"../Pages/Home\";\r\nimport Room from \"../Pages/Room\";\r\nimport SingleRoom from \"../Pages/SingleRoom\";\r\nimport Register from \"../Pages/Register\";\r\nimport Login from \"../Pages/Login\";\r\nimport Admin from \"../Pages/Admin\";\r\nimport Error from \"../Pages/Error\";\r\nimport EditUser from \"../Pages/EditUser\";\r\n\r\n// import components\r\nimport Navbar from \"../Components/Navbar/Navbar\";\r\nimport Footer from \"../Components/Footer/Footer\";\r\n\r\nfunction App() {\r\n  const userRole = localStorage.getItem(\"role\");\r\n  const isAdmin = userRole === \"ADMIN\";\r\n\r\n  console.log(\"role\", userRole);\r\n\r\n  return (\r\n    <Router>\r\n      {isAdmin ? (\r\n        <Admin />\r\n      ) : (\r\n        <>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/rooms/\" component={Room} />\r\n            <Route exact path=\"/rooms/:slug\" component={SingleRoom} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/edit\" component={EditUser} />\r\n            <Route path=\"/edit/:email\" component={EditUser} />\r\n            <Route component={Error} />\r\n          </Switch>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}