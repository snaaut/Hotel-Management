{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Components\\\\RoomsContainer\\\\RoomsList.jsx\",\n  _s = $RefreshSig$();\n// // import React from \"react\";\n\n// // // import components\n// // import Room from \"../Room/Room\";\n\n// // export default function RoomList({ rooms }) {\n// //   if (rooms.length === 0) {\n// //     return (\n// //       <div className=\"empty-search\">\n// //         <h3>unfortunately no rooms matched your search parameters</h3>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <section className=\"roomslist\">\n// //       <div className=\"roomslist-center\">\n// //         {rooms.map((item) => {\n// //           return <Room key={item.id} room={item} />;\n// //         })}\n// //       </div>\n// //     </section>\n// //   );\n// // }\n// // import React from \"react\";\n// // import Room from \"../Room/Room\";\n\n// // export default function RoomList({ rooms }) {\n// //   console.log(rooms);\n// //   if (rooms.length === 0) {\n// //     return (\n// //       <div className=\"empty-search\">\n// //         <h3>Unfortunately, no rooms matched your search parameters.</h3>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <section className=\"roomslist\">\n// //       <div className=\"roomslist-center\">\n// //         {rooms.map((room) => (\n// //           <Room key={room.id} room={room} />\n// //         ))}\n// //       </div>\n// //     </section>\n// //   );\n// // }\n// import React, { useEffect, useState } from \"react\";\n// import Room from \"../Room/Room\";\n\n// export default function RoomList() {\n//   const [rooms, setRooms] = useState([]);\n\n//   useEffect(() => {\n//     fetchRooms();\n//   }, []);\n\n//   const fetchRooms = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await fetch(\n//         \"http://localhost:8080/hotelManagement/rooms\",\n//         {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         console.log(data);\n//         setRooms(data);\n//       } else {\n//         console.error(\"Error fetching rooms:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching rooms:\", error);\n//     }\n//   };\n\n//   if (rooms.length === 0) {\n//     return (\n//       <div className=\"empty-search\">\n//         <h3>Unfortunately, no rooms matched your search parameters.</h3>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <section className=\"roomslist\">\n//       <div className=\"roomslist-center\">\n//         {rooms.map((room) => (\n//           <Room key={room.id} room={room} />\n//         ))}\n//       </div>\n//     </section>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport Room from \"../Room/Room\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoizedRoom = /*#__PURE__*/React.memo(Room);\n_c = MemoizedRoom;\nexport default function RoomList({\n  room\n}) {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    fetchRooms();\n  }, []);\n  const fetchRooms = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:8080/hotelManagement/rooms\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(data);\n        setRooms(data);\n      } else {\n        console.error(\"Error fetching rooms:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching rooms:\", error);\n    }\n  };\n  if (rooms.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-search\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unfortunately, no rooms matched your search parameters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"roomslist\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomslist-center\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(MemoizedRoom, {\n        id: room.id\n      }, room.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomList, \"pVIe8tJm1V/hStRMkuwTtBQhqgo=\");\n_c2 = RoomList;\nvar _c, _c2;\n$RefreshReg$(_c, \"MemoizedRoom\");\n$RefreshReg$(_c2, \"RoomList\");","map":{"version":3,"names":["React","useEffect","useState","Room","jsxDEV","_jsxDEV","MemoizedRoom","memo","_c","RoomList","room","_s","rooms","setRooms","fetchRooms","token","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","ok","console","log","error","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c2","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Components/RoomsContainer/RoomsList.jsx"],"sourcesContent":["// // import React from \"react\";\r\n\r\n// // // import components\r\n// // import Room from \"../Room/Room\";\r\n\r\n// // export default function RoomList({ rooms }) {\r\n// //   if (rooms.length === 0) {\r\n// //     return (\r\n// //       <div className=\"empty-search\">\r\n// //         <h3>unfortunately no rooms matched your search parameters</h3>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <section className=\"roomslist\">\r\n// //       <div className=\"roomslist-center\">\r\n// //         {rooms.map((item) => {\r\n// //           return <Room key={item.id} room={item} />;\r\n// //         })}\r\n// //       </div>\r\n// //     </section>\r\n// //   );\r\n// // }\r\n// // import React from \"react\";\r\n// // import Room from \"../Room/Room\";\r\n\r\n// // export default function RoomList({ rooms }) {\r\n// //   console.log(rooms);\r\n// //   if (rooms.length === 0) {\r\n// //     return (\r\n// //       <div className=\"empty-search\">\r\n// //         <h3>Unfortunately, no rooms matched your search parameters.</h3>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <section className=\"roomslist\">\r\n// //       <div className=\"roomslist-center\">\r\n// //         {rooms.map((room) => (\r\n// //           <Room key={room.id} room={room} />\r\n// //         ))}\r\n// //       </div>\r\n// //     </section>\r\n// //   );\r\n// // }\r\n// import React, { useEffect, useState } from \"react\";\r\n// import Room from \"../Room/Room\";\r\n\r\n// export default function RoomList() {\r\n//   const [rooms, setRooms] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchRooms();\r\n//   }, []);\r\n\r\n//   const fetchRooms = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const response = await fetch(\r\n//         \"http://localhost:8080/hotelManagement/rooms\",\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         console.log(data);\r\n//         setRooms(data);\r\n//       } else {\r\n//         console.error(\"Error fetching rooms:\", data);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rooms:\", error);\r\n//     }\r\n//   };\r\n\r\n//   if (rooms.length === 0) {\r\n//     return (\r\n//       <div className=\"empty-search\">\r\n//         <h3>Unfortunately, no rooms matched your search parameters.</h3>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <section className=\"roomslist\">\r\n//       <div className=\"roomslist-center\">\r\n//         {rooms.map((room) => (\r\n//           <Room key={room.id} room={room} />\r\n//         ))}\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// }\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Room from \"../Room/Room\";\r\nconst MemoizedRoom = React.memo(Room);\r\nexport default function RoomList({ room }) {\r\n  const [rooms, setRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  const fetchRooms = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        \"http://localhost:8080/hotelManagement/rooms\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log(data);\r\n        setRooms(data);\r\n      } else {\r\n        console.error(\"Error fetching rooms:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching rooms:\", error);\r\n    }\r\n  };\r\n\r\n  if (rooms.length === 0) {\r\n    return (\r\n      <div className=\"empty-search\">\r\n        <h3>Unfortunately, no rooms matched your search parameters.</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"roomslist\">\r\n      <div className=\"roomslist-center\">\r\n        {rooms.map((room) => (\r\n          <MemoizedRoom key={room.id} id={room.id} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}