{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Pages\\\\UserManage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// const UserManage = () => {\n//   const [users, setUsers] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch users from the API or data source\n//     fetchUsers();\n//   }, []);\n\n//   const fetchUsers = async () => {\n//     // Fetch users from an API and set the users state\n//     // For demonstration, we use a hardcoded list\n//     const usersData = [\n//       {\n//         email: \"john.doe@example.com\",\n//         fullName: \"John Doe\",\n//         phoneNumber: \"123-456-7890\",\n//         address: \"123 Main St\",\n//         role: \"user\",\n//         city: \"New York\",\n//         country: \"USA\",\n//       },\n//       {\n//         email: \"jane.doe@example.com\",\n//         fullName: \"Jane Doe\",\n//         phoneNumber: \"987-654-3210\",\n//         address: \"456 Elm St\",\n//         role: \"admin\",\n//         city: \"San Francisco\",\n//         country: \"USA\",\n//       },\n//     ];\n//     setUsers(usersData);\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleUpdate = (email) => {\n//     // Handle update user logic\n//     console.log(`Update user with email: ${email}`);\n//   };\n\n//   const handleDelete = (email) => {\n//     // Handle delete user logic\n//     setUsers(users.filter((user) => user.email !== email));\n//   };\n\n//   const handleAddUser = () => {\n//     // Handle add user logic\n//     console.log(\"Add new user\");\n//   };\n\n//   const filteredUsers = users.filter((user) =>\n//     user.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"user-manage\">\n//       <div className=\"user-manage-header\">\n//         <h1>User Management</h1>\n//         <button className=\"btn-add-user\" onClick={handleAddUser}>\n//           Add New User\n//         </button>\n//       </div>\n//       <div className=\"user-manage-search\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by full name...\"\n//           value={searchTerm}\n//           onChange={handleSearch}\n//         />\n//       </div>\n//       <table className=\"user-manage-table\">\n//         <thead>\n//           <tr>\n//             <th>Email</th>\n//             <th>Full Name</th>\n//             <th>Phone Number</th>\n//             <th>Address</th>\n//             <th>Role</th>\n//             <th>City</th>\n//             <th>Country</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredUsers.map((user) => (\n//             <tr key={user.email}>\n//               <td>{user.email}</td>\n//               <td>{user.fullName}</td>\n//               <td>{user.phoneNumber}</td>\n//               <td>{user.address}</td>\n//               <td>{user.role}</td>\n//               <td>{user.city}</td>\n//               <td>{user.country}</td>\n//               <td>\n//                 <button\n//                   className=\"btn-update\"\n//                   onClick={() => handleUpdate(user.email)}\n//                 >\n//                   Update\n//                 </button>\n//                 <button\n//                   className=\"btn-delete\"\n//                   onClick={() => handleDelete(user.email)}\n//                 >\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserManage;\n// import React, { useState, useEffect } from \"react\";\n\n// const UserManage = () => {\n//   const [users, setUsers] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   const fetchUsers = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await fetch(\n//         \"http://localhost:8080/hotelManagement/user/getAll\",\n//         {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n\n//       setUsers(data);\n//       console.log(data);\n//     } catch (error) {}\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleUpdate = (email) => {\n//     // Handle update user logic\n//     console.log(`Update user with email: ${email}`);\n//   };\n\n//   const handleDelete = async (email) => {};\n\n//   const handleAddUser = () => {\n//     // Handle add user logic\n//     console.log(\"Add new user\");\n//   };\n\n//   return (\n//     <div className=\"user-manage\">\n//       <>\n//         <div className=\"user-manage-header\">\n//           <h1>User Management</h1>\n//           <button className=\"btn-add-user\" onClick={handleAddUser}>\n//             Add New User\n//           </button>\n//         </div>\n//         <div className=\"user-manage-search\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by full name...\"\n//             value={searchTerm}\n//             onChange={handleSearch}\n//           />\n//         </div>\n//         <table className=\"user-manage-table\">\n//           <thead>\n//             <tr>\n//               <th>Email</th>\n//               <th>Full Name</th>\n//               <th>Phone Number</th>\n//               <th>Address</th>\n//               <th>Role</th>\n//               <th>City</th>\n//               <th>Country</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {Object.values(users).map((user) => (\n//               <tr key={user.id}>\n//                 <td>{user.email}</td>\n//                 <td>{user.fullName}</td>\n//                 <td>{user.phoneNumber}</td>\n//                 <td>{user.address}</td>\n//                 <td>{user.role}</td>\n//                 <td>{user.city}</td>\n//                 <td>{user.country}</td>\n//                 <td>\n//                   <button\n//                     className=\"btn-update\"\n//                     onClick={() => handleUpdate(user.email)}\n//                   >\n//                     Update\n//                   </button>\n//                   <button\n//                     className=\"btn-delete\"\n//                     onClick={() => handleDelete(user.email)}\n//                   >\n//                     Delete\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </>\n//     </div>\n//   );\n// };\n\n// export default UserManage;\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserManage = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:8080/hotelManagement/user/getAll\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.msg || \"Đã xảy ra lỗi khi lấy dữ liệu người dùng.\");\n      }\n      setUsers(data.users);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleUpdate = userName => {\n    // Handle update user logic\n    console.log(`Update user with userName: ${userName}`);\n  };\n  const handleDelete = async userName => {\n    // Handle delete user logic\n  };\n  const handleAddUser = () => {\n    // Handle add user logic\n    console.log(\"Add new user\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-manage\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-manage-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-add-user\",\n          onClick: handleAddUser,\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-manage-search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by full name...\",\n          value: searchTerm,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-manage-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-update\",\n                onClick: () => handleUpdate(user.userName),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete\",\n                onClick: () => handleDelete(user.userName),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManage, \"BxfvbRPCNEtGihvMIl2yxXujUOI=\");\n_c = UserManage;\nexport default UserManage;\nvar _c;\n$RefreshReg$(_c, \"UserManage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManage","_s","users","setUsers","searchTerm","setSearchTerm","error","setError","fetchUsers","token","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","ok","Error","msg","message","handleSearch","e","target","value","handleUpdate","userName","console","log","handleDelete","handleAddUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","map","user","email","fullName","phoneNumber","address","role","city","country","id","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Pages/UserManage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const UserManage = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     // Fetch users from the API or data source\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const fetchUsers = async () => {\r\n//     // Fetch users from an API and set the users state\r\n//     // For demonstration, we use a hardcoded list\r\n//     const usersData = [\r\n//       {\r\n//         email: \"john.doe@example.com\",\r\n//         fullName: \"John Doe\",\r\n//         phoneNumber: \"123-456-7890\",\r\n//         address: \"123 Main St\",\r\n//         role: \"user\",\r\n//         city: \"New York\",\r\n//         country: \"USA\",\r\n//       },\r\n//       {\r\n//         email: \"jane.doe@example.com\",\r\n//         fullName: \"Jane Doe\",\r\n//         phoneNumber: \"987-654-3210\",\r\n//         address: \"456 Elm St\",\r\n//         role: \"admin\",\r\n//         city: \"San Francisco\",\r\n//         country: \"USA\",\r\n//       },\r\n//     ];\r\n//     setUsers(usersData);\r\n//   };\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//   };\r\n\r\n//   const handleUpdate = (email) => {\r\n//     // Handle update user logic\r\n//     console.log(`Update user with email: ${email}`);\r\n//   };\r\n\r\n//   const handleDelete = (email) => {\r\n//     // Handle delete user logic\r\n//     setUsers(users.filter((user) => user.email !== email));\r\n//   };\r\n\r\n//   const handleAddUser = () => {\r\n//     // Handle add user logic\r\n//     console.log(\"Add new user\");\r\n//   };\r\n\r\n//   const filteredUsers = users.filter((user) =>\r\n//     user.fullName.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"user-manage\">\r\n//       <div className=\"user-manage-header\">\r\n//         <h1>User Management</h1>\r\n//         <button className=\"btn-add-user\" onClick={handleAddUser}>\r\n//           Add New User\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"user-manage-search\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search by full name...\"\r\n//           value={searchTerm}\r\n//           onChange={handleSearch}\r\n//         />\r\n//       </div>\r\n//       <table className=\"user-manage-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Email</th>\r\n//             <th>Full Name</th>\r\n//             <th>Phone Number</th>\r\n//             <th>Address</th>\r\n//             <th>Role</th>\r\n//             <th>City</th>\r\n//             <th>Country</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {filteredUsers.map((user) => (\r\n//             <tr key={user.email}>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.fullName}</td>\r\n//               <td>{user.phoneNumber}</td>\r\n//               <td>{user.address}</td>\r\n//               <td>{user.role}</td>\r\n//               <td>{user.city}</td>\r\n//               <td>{user.country}</td>\r\n//               <td>\r\n//                 <button\r\n//                   className=\"btn-update\"\r\n//                   onClick={() => handleUpdate(user.email)}\r\n//                 >\r\n//                   Update\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"btn-delete\"\r\n//                   onClick={() => handleDelete(user.email)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserManage;\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\n// const UserManage = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const response = await fetch(\r\n//         \"http://localhost:8080/hotelManagement/user/getAll\",\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n\r\n//       setUsers(data);\r\n//       console.log(data);\r\n//     } catch (error) {}\r\n//   };\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//   };\r\n\r\n//   const handleUpdate = (email) => {\r\n//     // Handle update user logic\r\n//     console.log(`Update user with email: ${email}`);\r\n//   };\r\n\r\n//   const handleDelete = async (email) => {};\r\n\r\n//   const handleAddUser = () => {\r\n//     // Handle add user logic\r\n//     console.log(\"Add new user\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"user-manage\">\r\n//       <>\r\n//         <div className=\"user-manage-header\">\r\n//           <h1>User Management</h1>\r\n//           <button className=\"btn-add-user\" onClick={handleAddUser}>\r\n//             Add New User\r\n//           </button>\r\n//         </div>\r\n//         <div className=\"user-manage-search\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search by full name...\"\r\n//             value={searchTerm}\r\n//             onChange={handleSearch}\r\n//           />\r\n//         </div>\r\n//         <table className=\"user-manage-table\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Email</th>\r\n//               <th>Full Name</th>\r\n//               <th>Phone Number</th>\r\n//               <th>Address</th>\r\n//               <th>Role</th>\r\n//               <th>City</th>\r\n//               <th>Country</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {Object.values(users).map((user) => (\r\n//               <tr key={user.id}>\r\n//                 <td>{user.email}</td>\r\n//                 <td>{user.fullName}</td>\r\n//                 <td>{user.phoneNumber}</td>\r\n//                 <td>{user.address}</td>\r\n//                 <td>{user.role}</td>\r\n//                 <td>{user.city}</td>\r\n//                 <td>{user.country}</td>\r\n//                 <td>\r\n//                   <button\r\n//                     className=\"btn-update\"\r\n//                     onClick={() => handleUpdate(user.email)}\r\n//                   >\r\n//                     Update\r\n//                   </button>\r\n//                   <button\r\n//                     className=\"btn-delete\"\r\n//                     onClick={() => handleDelete(user.email)}\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserManage;\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst UserManage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        \"http://localhost:8080/hotelManagement/user/getAll\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\r\n          data.msg || \"Đã xảy ra lỗi khi lấy dữ liệu người dùng.\"\r\n        );\r\n      }\r\n\r\n      setUsers(data.users);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleUpdate = (userName) => {\r\n    // Handle update user logic\r\n    console.log(`Update user with userName: ${userName}`);\r\n  };\r\n\r\n  const handleDelete = async (userName) => {\r\n    // Handle delete user logic\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    // Handle add user logic\r\n    console.log(\"Add new user\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-manage\">\r\n      <>\r\n        <div className=\"user-manage-header\">\r\n          <h1>User Management</h1>\r\n          <button className=\"btn-add-user\" onClick={handleAddUser}>\r\n            Add New User\r\n          </button>\r\n        </div>\r\n        <div className=\"user-manage-search\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by full name...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n          />\r\n        </div>\r\n        {error && <div className=\"error\">{error}</div>}\r\n        <table className=\"user-manage-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Email</th>\r\n              <th>Full Name</th>\r\n              <th>Phone Number</th>\r\n              <th>Address</th>\r\n              <th>Role</th>\r\n              <th>City</th>\r\n              <th>Country</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.userName}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.fullName}</td>\r\n                <td>{user.phoneNumber}</td>\r\n                <td>{user.address}</td>\r\n                <td>{user.role}</td>\r\n                <td>{user.city}</td>\r\n                <td>{user.country}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn-update\"\r\n                    onClick={() => handleUpdate(user.userName)}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  <button\r\n                    className=\"btn-delete\"\r\n                    onClick={() => handleDelete(user.userName)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManage;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,UAAU,GAAGA,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}