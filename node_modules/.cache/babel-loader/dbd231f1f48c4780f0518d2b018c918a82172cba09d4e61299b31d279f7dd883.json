{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Components\\\\Room\\\\Room.jsx\";\n// import React from \"react\";\n\n// // import react-router-dom\n// import { Link } from \"react-router-dom\";\n\n// // import assets\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n\n// // import prop-types\n// import PropTypes from \"prop-types\";\n\n// export default function Room({ room }) {\n//   const { name, slug, images, price } = room;\n\n//   return (\n//     <article className=\"room\">\n//       <div className=\"img-container\">\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\n\n//         <div className=\"price-top\">\n//           <h6>$ {price}</h6>\n//           <p>per night</p>\n//         </div>\n\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\n//           View\n//         </Link>\n//       </div>\n//       <p className=\"room-info\">{name}</p>\n//     </article>\n//   );\n// }\n\n// Room.prototype = {\n//   room: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     slug: PropTypes.string.isRequired,\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\n//     price: PropTypes.number.isRequired,\n//   }),\n// };\n\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n\n// export default function RoomsList() {\n//   const [roomIds, setRoomIds] = useState([]);\n//   const [rooms, setRooms] = useState([]);\n\n//   useEffect(() => {\n//     fetchRoomIds();\n//   }, []);\n\n//   useEffect(() => {\n//     if (roomIds.length > 0) {\n//       fetchRoomsByIds(roomIds);\n//     }\n//   }, [roomIds]);\n\n//   const fetchRoomIds = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await fetch(\n//         \"http://localhost:8080/hotelManagement/rooms/list-id\",\n//         {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       if (response.ok) {\n//         // Ensure `data` is an array and remove duplicates\n//         const uniqueRoomIds = new Set(data).size === data.length ? data : [];\n//         setRoomIds(uniqueRoomIds);\n//       } else {\n//         console.error(\"Error fetching room IDs:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching room IDs:\", error);\n//     }\n//   };\n\n//   const fetchRoomsByIds = async (ids) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const roomPromises = ids.map((id) =>\n//         fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }).then((response) => response.json())\n//       );\n//       const roomsData = await Promise.all(roomPromises);\n\n//       // Filter out empty or invalid entries before setting state\n//       const validRooms = roomsData.filter((room) => room && room.id);\n//       setRooms(validRooms);\n//     } catch (error) {\n//       console.error(\"Error fetching rooms:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"room-list\">\n//       {rooms.map((room) => (\n//         <article className=\"room\" key={room.id}>\n//           <div className=\"img-container\">\n//             <img\n//               src={\n//                 // room.images && room.images.length > 0 ? room.images[0] : defaultImg\n//                 //room.images?.[0] ??\n//                 defaultImg // Optional chaining and nullish coalescing\n//               }\n//               alt=\"single room\"\n//             />\n//             <div className=\"price-top\">\n//               <h6>$ {room.pricePerDay}</h6>\n//               <p>per night</p>\n//             </div>\n//             <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\n//               View\n//             </Link>\n//           </div>\n//           <p className=\"room-info\">{room.typeRoom}</p>\n//         </article>\n//       ))}\n//     </div>\n//   );\n// }\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room({\n  room\n}) {\n  var _room$images$, _room$images;\n  if (!room) {\n    return null; // Handle missing room data\n  }\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: (_room$images$ = (_room$images = room.images) === null || _room$images === void 0 ? void 0 : _room$images[0]) !== null && _room$images$ !== void 0 ? _room$images$ : defaultImg // Optional chaining and nullish coalescing\n        ,\n        alt: \"single room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"$ \", room.pricePerDay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"per night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/rooms/${room.id}`,\n        className: \"btn-primary room-link\",\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"room-info\",\n      children: room.typeRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, room.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","Link","defaultImg","jsxDEV","_jsxDEV","Room","room","_room$images$","_room$images","className","children","src","images","alt","fileName","_jsxFileName","lineNumber","columnNumber","pricePerDay","to","id","typeRoom","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Components/Room/Room.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// // import react-router-dom\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// // import assets\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\n// // import prop-types\r\n// import PropTypes from \"prop-types\";\r\n\r\n// export default function Room({ room }) {\r\n//   const { name, slug, images, price } = room;\r\n\r\n//   return (\r\n//     <article className=\"room\">\r\n//       <div className=\"img-container\">\r\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\r\n\r\n//         <div className=\"price-top\">\r\n//           <h6>$ {price}</h6>\r\n//           <p>per night</p>\r\n//         </div>\r\n\r\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\r\n//           View\r\n//         </Link>\r\n//       </div>\r\n//       <p className=\"room-info\">{name}</p>\r\n//     </article>\r\n//   );\r\n// }\r\n\r\n// Room.prototype = {\r\n//   room: PropTypes.shape({\r\n//     name: PropTypes.string.isRequired,\r\n//     slug: PropTypes.string.isRequired,\r\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n//   }),\r\n// };\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\n// export default function RoomsList() {\r\n//   const [roomIds, setRoomIds] = useState([]);\r\n//   const [rooms, setRooms] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchRoomIds();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (roomIds.length > 0) {\r\n//       fetchRoomsByIds(roomIds);\r\n//     }\r\n//   }, [roomIds]);\r\n\r\n//   const fetchRoomIds = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const response = await fetch(\r\n//         \"http://localhost:8080/hotelManagement/rooms/list-id\",\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         // Ensure `data` is an array and remove duplicates\r\n//         const uniqueRoomIds = new Set(data).size === data.length ? data : [];\r\n//         setRoomIds(uniqueRoomIds);\r\n//       } else {\r\n//         console.error(\"Error fetching room IDs:\", data);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching room IDs:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchRoomsByIds = async (ids) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const roomPromises = ids.map((id) =>\r\n//         fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }).then((response) => response.json())\r\n//       );\r\n//       const roomsData = await Promise.all(roomPromises);\r\n\r\n//       // Filter out empty or invalid entries before setting state\r\n//       const validRooms = roomsData.filter((room) => room && room.id);\r\n//       setRooms(validRooms);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rooms:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"room-list\">\r\n//       {rooms.map((room) => (\r\n//         <article className=\"room\" key={room.id}>\r\n//           <div className=\"img-container\">\r\n//             <img\r\n//               src={\r\n//                 // room.images && room.images.length > 0 ? room.images[0] : defaultImg\r\n//                 //room.images?.[0] ??\r\n//                 defaultImg // Optional chaining and nullish coalescing\r\n//               }\r\n//               alt=\"single room\"\r\n//             />\r\n//             <div className=\"price-top\">\r\n//               <h6>$ {room.pricePerDay}</h6>\r\n//               <p>per night</p>\r\n//             </div>\r\n//             <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n//               View\r\n//             </Link>\r\n//           </div>\r\n//           <p className=\"room-info\">{room.typeRoom}</p>\r\n//         </article>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\nexport default function Room({ room }) {\r\n  if (!room) {\r\n    return null; // Handle missing room data\r\n  }\r\n\r\n  return (\r\n    <article className=\"room\" key={room.id}>\r\n      <div className=\"img-container\">\r\n        <img\r\n          src={\r\n            room.images?.[0] ?? defaultImg // Optional chaining and nullish coalescing\r\n          }\r\n          alt=\"single room\"\r\n        />\r\n        <div className=\"price-top\">\r\n          <h6>$ {room.pricePerDay}</h6>\r\n          <p>per night</p>\r\n        </div>\r\n        <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n          View\r\n        </Link>\r\n      </div>\r\n      <p className=\"room-info\">{room.typeRoom}</p>\r\n    </article>\r\n  );\r\n}\r\n"],"mappings":";AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAA,IAAAC,aAAA,EAAAC,YAAA;EACrC,IAAI,CAACF,IAAI,EAAE;IACT,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEF,OAAA;IAASK,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvBN,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BN,OAAA;QACEO,GAAG,GAAAJ,aAAA,IAAAC,YAAA,GACDF,IAAI,CAACM,MAAM,cAAAJ,YAAA,uBAAXA,YAAA,CAAc,CAAC,CAAC,cAAAD,aAAA,cAAAA,aAAA,GAAIL,UAAU,CAAC;QAChC;QACDW,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACFb,OAAA;QAAKK,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBN,OAAA;UAAAM,QAAA,GAAI,IAAE,EAACJ,IAAI,CAACY,WAAW;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7Bb,OAAA;UAAAM,QAAA,EAAG;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACNb,OAAA,CAACH,IAAI;QAACkB,EAAE,EAAG,UAASb,IAAI,CAACc,EAAG,EAAE;QAACX,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAEjE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNb,OAAA;MAAGK,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEJ,IAAI,CAACe;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,GAhBfX,IAAI,CAACc,EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiB7B,CAAC;AAEd;AAACK,EAAA,GAzBuBjB,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}