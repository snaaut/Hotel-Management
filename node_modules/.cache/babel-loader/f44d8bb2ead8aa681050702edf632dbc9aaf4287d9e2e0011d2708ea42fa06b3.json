{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Components\\\\Room\\\\Room.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// // import react-router-dom\n// import { Link } from \"react-router-dom\";\n\n// // import assets\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n\n// // import prop-types\n// import PropTypes from \"prop-types\";\n\n// export default function Room({ room }) {\n//   const { name, slug, images, price } = room;\n\n//   return (\n//     <article className=\"room\">\n//       <div className=\"img-container\">\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\n\n//         <div className=\"price-top\">\n//           <h6>$ {price}</h6>\n//           <p>per night</p>\n//         </div>\n\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\n//           View\n//         </Link>\n//       </div>\n//       <p className=\"room-info\">{name}</p>\n//     </article>\n//   );\n// }\n\n// Room.prototype = {\n//   room: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     slug: PropTypes.string.isRequired,\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\n//     price: PropTypes.number.isRequired,\n//   }),\n// };\n\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n// import { useEffect, useState } from \"react\";\n\n// export default function RoomsList() {\n//   const [roomIds, setRoomIds] = useState([]);\n//   const [rooms, setRooms] = useState([]);\n\n//   useEffect(() => {\n//     fetchRoomIds();\n//   }, []);\n\n//   useEffect(() => {\n//     if (roomIds.length > 0) {\n//       fetchRoomsByIds(roomIds);\n//     }\n//   }, [roomIds]);\n\n//   const fetchRoomIds = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await fetch(\n//         \"http://localhost:8080/hotelManagement/rooms/list-id\",\n//         {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       if (response.ok) {\n//         setRoomIds(data);\n//       } else {\n//         console.error(\"Error fetching room IDs:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching room IDs:\", error);\n//     }\n//   };\n\n//   const fetchRoomsByIds = async (ids) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const roomPromises = ids.map((id) =>\n//         fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }).then((response) => response.json())\n//       );\n//       const roomsData = await Promise.all(roomPromises);\n//       setRooms(roomsData);\n//     } catch (error) {\n//       console.error(\"Error fetching rooms:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"room-list\">\n//       {rooms.map((room) => (\n//         <article className=\"room\" key={room.id}>\n//           <div className=\"img-container\">\n//             <img src={defaultImg} alt=\"single room\" />\n//             <div className=\"price-top\">\n//               <h6>$ {room.pricePerDay}</h6>\n//               <p>per night</p>\n//             </div>\n//             <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\n//               View\n//             </Link>\n//           </div>\n//           <p className=\"room-info\">{room.typeRoom}</p>\n//         </article>\n//       ))}\n//     </div>\n//   );\n// }\nimport { Link } from \"react-router-dom\";\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoomsList() {\n  _s();\n  const [roomIds, setRoomIds] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [isRoomIdsLoaded, setIsRoomIdsLoaded] = useState(false);\n  const fetchRoomIds = useCallback(async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:8080/hotelManagement/rooms/list-id\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setRoomIds(data);\n        setIsRoomIdsLoaded(true);\n      } else {\n        console.error(\"Error fetching room IDs:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching room IDs:\", error);\n    }\n  }, []);\n  const fetchRoomsByIds = useCallback(async ids => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const roomPromises = ids.map(id => fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => response.json()));\n      const roomsData = await Promise.all(roomPromises);\n      setRooms(roomsData);\n    } catch (error) {\n      console.error(\"Error fetching rooms:\", error);\n    }\n  }, []);\n  useEffect(() => {\n    if (!isRoomIdsLoaded) {\n      fetchRoomIds();\n    }\n  }, [fetchRoomIds, isRoomIdsLoaded]);\n  useEffect(() => {\n    if (roomIds.length > 0) {\n      fetchRoomsByIds(roomIds);\n    }\n  }, [roomIds, fetchRoomsByIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-list\",\n    children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: defaultImg,\n          alt: \"single room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"$ \", room.pricePerDay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"per night\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/rooms/${room.id}`,\n          className: \"btn-primary room-link\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-info\",\n        children: room.typeRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, room.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomsList, \"UuVGqb5iEnQwJoTWMtV/6oKC3ao=\");\n_c = RoomsList;\nvar _c;\n$RefreshReg$(_c, \"RoomsList\");","map":{"version":3,"names":["Link","defaultImg","useEffect","useState","useCallback","jsxDEV","_jsxDEV","RoomsList","_s","roomIds","setRoomIds","rooms","setRooms","isRoomIdsLoaded","setIsRoomIdsLoaded","fetchRoomIds","token","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","ok","console","error","fetchRoomsByIds","ids","roomPromises","map","id","then","roomsData","Promise","all","length","className","children","room","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","pricePerDay","to","typeRoom","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Components/Room/Room.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// // import react-router-dom\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// // import assets\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\n// // import prop-types\r\n// import PropTypes from \"prop-types\";\r\n\r\n// export default function Room({ room }) {\r\n//   const { name, slug, images, price } = room;\r\n\r\n//   return (\r\n//     <article className=\"room\">\r\n//       <div className=\"img-container\">\r\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\r\n\r\n//         <div className=\"price-top\">\r\n//           <h6>$ {price}</h6>\r\n//           <p>per night</p>\r\n//         </div>\r\n\r\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\r\n//           View\r\n//         </Link>\r\n//       </div>\r\n//       <p className=\"room-info\">{name}</p>\r\n//     </article>\r\n//   );\r\n// }\r\n\r\n// Room.prototype = {\r\n//   room: PropTypes.shape({\r\n//     name: PropTypes.string.isRequired,\r\n//     slug: PropTypes.string.isRequired,\r\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n//   }),\r\n// };\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// export default function RoomsList() {\r\n//   const [roomIds, setRoomIds] = useState([]);\r\n//   const [rooms, setRooms] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchRoomIds();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (roomIds.length > 0) {\r\n//       fetchRoomsByIds(roomIds);\r\n//     }\r\n//   }, [roomIds]);\r\n\r\n//   const fetchRoomIds = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const response = await fetch(\r\n//         \"http://localhost:8080/hotelManagement/rooms/list-id\",\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         setRoomIds(data);\r\n//       } else {\r\n//         console.error(\"Error fetching room IDs:\", data);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching room IDs:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchRoomsByIds = async (ids) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const roomPromises = ids.map((id) =>\r\n//         fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }).then((response) => response.json())\r\n//       );\r\n//       const roomsData = await Promise.all(roomPromises);\r\n//       setRooms(roomsData);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rooms:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"room-list\">\r\n//       {rooms.map((room) => (\r\n//         <article className=\"room\" key={room.id}>\r\n//           <div className=\"img-container\">\r\n//             <img src={defaultImg} alt=\"single room\" />\r\n//             <div className=\"price-top\">\r\n//               <h6>$ {room.pricePerDay}</h6>\r\n//               <p>per night</p>\r\n//             </div>\r\n//             <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n//               View\r\n//             </Link>\r\n//           </div>\r\n//           <p className=\"room-info\">{room.typeRoom}</p>\r\n//         </article>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\nimport { Link } from \"react-router-dom\";\r\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\n\r\nexport default function RoomsList() {\r\n  const [roomIds, setRoomIds] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [isRoomIdsLoaded, setIsRoomIdsLoaded] = useState(false);\r\n\r\n  const fetchRoomIds = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        \"http://localhost:8080/hotelManagement/rooms/list-id\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setRoomIds(data);\r\n        setIsRoomIdsLoaded(true);\r\n      } else {\r\n        console.error(\"Error fetching room IDs:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching room IDs:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchRoomsByIds = useCallback(async (ids) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const roomPromises = ids.map((id) =>\r\n        fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }).then((response) => response.json())\r\n      );\r\n      const roomsData = await Promise.all(roomPromises);\r\n      setRooms(roomsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rooms:\", error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isRoomIdsLoaded) {\r\n      fetchRoomIds();\r\n    }\r\n  }, [fetchRoomIds, isRoomIdsLoaded]);\r\n\r\n  useEffect(() => {\r\n    if (roomIds.length > 0) {\r\n      fetchRoomsByIds(roomIds);\r\n    }\r\n  }, [roomIds, fetchRoomsByIds]);\r\n\r\n  return (\r\n    <div className=\"room-list\">\r\n      {rooms.map((room) => (\r\n        <article className=\"room\" key={room.id}>\r\n          <div className=\"img-container\">\r\n            <img src={defaultImg} alt=\"single room\" />\r\n            <div className=\"price-top\">\r\n              <h6>$ {room.pricePerDay}</h6>\r\n              <p>per night</p>\r\n            </div>\r\n            <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n              View\r\n            </Link>\r\n          </div>\r\n          <p className=\"room-info\">{room.typeRoom}</p>\r\n        </article>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}