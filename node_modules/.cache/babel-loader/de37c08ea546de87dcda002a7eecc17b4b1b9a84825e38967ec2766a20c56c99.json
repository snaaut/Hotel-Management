{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Components\\\\Room\\\\Room.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// // import react-router-dom\n// import { Link } from \"react-router-dom\";\n\n// // import assets\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n\n// // import prop-types\n// import PropTypes from \"prop-types\";\n\n// export default function Room({ room }) {\n//   const { name, slug, images, price } = room;\n\n//   return (\n//     <article className=\"room\">\n//       <div className=\"img-container\">\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\n\n//         <div className=\"price-top\">\n//           <h6>$ {price}</h6>\n//           <p>per night</p>\n//         </div>\n\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\n//           View\n//         </Link>\n//       </div>\n//       <p className=\"room-info\">{name}</p>\n//     </article>\n//   );\n// }\n\n// Room.prototype = {\n//   room: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     slug: PropTypes.string.isRequired,\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\n//     price: PropTypes.number.isRequired,\n//   }),\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoomsList() {\n  _s();\n  const [roomIds, setRoomIds] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    fetchRoomIds();\n  }, []);\n  useEffect(() => {\n    if (roomIds.length > 0) {\n      fetchRoomsByIds(roomIds);\n    }\n  }, [roomIds]);\n  const fetchRoomIds = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(\"http://localhost:8080/hotelManagement/rooms/room-ids\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setRoomIds(data);\n      } else {\n        console.error(\"Error fetching room IDs:\", data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching room IDs:\", error);\n    }\n  };\n  const fetchRoomsByIds = async ids => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const roomPromises = ids.map(id => fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => response.json()));\n      const roomsData = await Promise.all(roomPromises);\n      setRooms(roomsData);\n    } catch (error) {\n      console.error(\"Error fetching rooms:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-list\",\n    children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: room.images && room.images.length > 0 ? room.images[0] : defaultImg,\n          alt: \"single room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"$ \", room.pricePerDay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"per night\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/rooms/${room.id}`,\n          className: \"btn-primary room-link\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-info\",\n        children: room.typeRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, room.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomsList, \"hK6mPNmxEjAQJ8d9BfuoH86FSQk=\");\n_c = RoomsList;\nvar _c;\n$RefreshReg$(_c, \"RoomsList\");","map":{"version":3,"names":["React","useEffect","useState","Link","defaultImg","jsxDEV","_jsxDEV","RoomsList","_s","roomIds","setRoomIds","rooms","setRooms","fetchRoomIds","length","fetchRoomsByIds","token","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","ok","console","error","ids","roomPromises","map","id","then","roomsData","Promise","all","className","children","room","src","images","alt","fileName","_jsxFileName","lineNumber","columnNumber","pricePerDay","to","typeRoom","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Components/Room/Room.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// // import react-router-dom\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// // import assets\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\n// // import prop-types\r\n// import PropTypes from \"prop-types\";\r\n\r\n// export default function Room({ room }) {\r\n//   const { name, slug, images, price } = room;\r\n\r\n//   return (\r\n//     <article className=\"room\">\r\n//       <div className=\"img-container\">\r\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\r\n\r\n//         <div className=\"price-top\">\r\n//           <h6>$ {price}</h6>\r\n//           <p>per night</p>\r\n//         </div>\r\n\r\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\r\n//           View\r\n//         </Link>\r\n//       </div>\r\n//       <p className=\"room-info\">{name}</p>\r\n//     </article>\r\n//   );\r\n// }\r\n\r\n// Room.prototype = {\r\n//   room: PropTypes.shape({\r\n//     name: PropTypes.string.isRequired,\r\n//     slug: PropTypes.string.isRequired,\r\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n//   }),\r\n// };\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\nexport default function RoomsList() {\r\n  const [roomIds, setRoomIds] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRoomIds();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (roomIds.length > 0) {\r\n      fetchRoomsByIds(roomIds);\r\n    }\r\n  }, [roomIds]);\r\n\r\n  const fetchRoomIds = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        \"http://localhost:8080/hotelManagement/rooms/room-ids\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setRoomIds(data);\r\n      } else {\r\n        console.error(\"Error fetching room IDs:\", data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching room IDs:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchRoomsByIds = async (ids) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const roomPromises = ids.map((id) =>\r\n        fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }).then((response) => response.json())\r\n      );\r\n      const roomsData = await Promise.all(roomPromises);\r\n      setRooms(roomsData);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rooms:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-list\">\r\n      {rooms.map((room) => (\r\n        <article className=\"room\" key={room.id}>\r\n          <div className=\"img-container\">\r\n            <img\r\n              src={\r\n                room.images && room.images.length > 0\r\n                  ? room.images[0]\r\n                  : defaultImg\r\n              }\r\n              alt=\"single room\"\r\n            />\r\n            <div className=\"price-top\">\r\n              <h6>$ {room.pricePerDay}</h6>\r\n              <p>per night</p>\r\n            </div>\r\n            <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n              View\r\n            </Link>\r\n          </div>\r\n          <p className=\"room-info\">{room.typeRoom}</p>\r\n        </article>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,UAAU,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdY,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,IAAIQ,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;MACtBC,eAAe,CAACN,OAAO,CAAC;IAC1B;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sDAAsD,EACtD;QACEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,KAAM;QACjC;MACF,CACF,CAAC;MACD,MAAMQ,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACfhB,UAAU,CAACc,IAAI,CAAC;MAClB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEJ,IAAI,CAAC;MACjD;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMb,eAAe,GAAG,MAAOc,GAAG,IAAK;IACrC,IAAI;MACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMY,YAAY,GAAGD,GAAG,CAACE,GAAG,CAAEC,EAAE,IAC9BZ,KAAK,CAAE,wDAAuDY,EAAG,EAAC,EAAE;QAClEX,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,KAAM;QACjC;MACF,CAAC,CAAC,CAACiB,IAAI,CAAEd,QAAQ,IAAKA,QAAQ,CAACM,IAAI,CAAC,CAAC,CACvC,CAAC;MACD,MAAMS,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;MACjDlB,QAAQ,CAACsB,SAAS,CAAC;IACrB,CAAC,CAAC,OAAON,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEtB,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvB3B,KAAK,CAACoB,GAAG,CAAEQ,IAAI,iBACdjC,OAAA;MAAS+B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACvBhC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhC,OAAA;UACEkC,GAAG,EACDD,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAAC3B,MAAM,GAAG,CAAC,GACjCyB,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,GACdrC,UACL;UACDsC,GAAG,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFxC,OAAA;UAAK+B,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBhC,OAAA;YAAAgC,QAAA,GAAI,IAAE,EAACC,IAAI,CAACQ,WAAW;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BxC,OAAA;YAAAgC,QAAA,EAAG;UAAS;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACNxC,OAAA,CAACH,IAAI;UAAC6C,EAAE,EAAG,UAAST,IAAI,CAACP,EAAG,EAAE;UAACK,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAEjE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNxC,OAAA;QAAG+B,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEC,IAAI,CAACU;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAlBfP,IAAI,CAACP,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmB7B,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtC,EAAA,CAjFuBD,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}