{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Components\\\\Room\\\\Room.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// // import react-router-dom\n// import { Link } from \"react-router-dom\";\n\n// // import assets\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n\n// // import prop-types\n// import PropTypes from \"prop-types\";\n\n// export default function Room({ room }) {\n//   const { name, slug, images, price } = room;\n\n//   return (\n//     <article className=\"room\">\n//       <div className=\"img-container\">\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\n\n//         <div className=\"price-top\">\n//           <h6>$ {price}</h6>\n//           <p>per night</p>\n//         </div>\n\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\n//           View\n//         </Link>\n//       </div>\n//       <p className=\"room-info\">{name}</p>\n//     </article>\n//   );\n// }\n\n// Room.prototype = {\n//   room: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     slug: PropTypes.string.isRequired,\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\n//     price: PropTypes.number.isRequired,\n//   }),\n// };\n\n// import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\n\n// export default function RoomsList() {\n//   const [roomIds, setRoomIds] = useState([]);\n//   const [rooms, setRooms] = useState([]);\n\n//   useEffect(() => {\n//     fetchRoomIds();\n//   }, []);\n\n//   useEffect(() => {\n//     if (roomIds.length > 0) {\n//       fetchRoomsByIds(roomIds);\n//     }\n//   }, [roomIds]);\n\n//   const fetchRoomIds = async () => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await fetch(\n//         \"http://localhost:8080/hotelManagement/rooms/list-id\",\n//         {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       const data = await response.json();\n//       if (response.ok) {\n//         // Ensure `data` is an array and remove duplicates\n//         const uniqueRoomIds = new Set(data).size === data.length ? data : [];\n//         setRoomIds(uniqueRoomIds);\n//       } else {\n//         console.error(\"Error fetching room IDs:\", data);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching room IDs:\", error);\n//     }\n//   };\n\n//   const fetchRoomsByIds = async (ids) => {\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const roomPromises = ids.map((id) =>\n//         fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }).then((response) => response.json())\n//       );\n//       const roomsData = await Promise.all(roomPromises);\n\n//       // Filter out empty or invalid entries before setting state\n//       const validRooms = roomsData.filter((room) => room && room.id);\n//       setRooms(validRooms);\n//     } catch (error) {\n//       console.error(\"Error fetching rooms:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"room-list\">\n//       {rooms.map((room) => (\n//         <article className=\"room\" key={room.id}>\n//           <div className=\"img-container\">\n//             <img\n//               src={\n//                 // room.images && room.images.length > 0 ? room.images[0] : defaultImg\n//                 //room.images?.[0] ??\n//                 defaultImg // Optional chaining and nullish coalescing\n//               }\n//               alt=\"single room\"\n//             />\n//             <div className=\"price-top\">\n//               <h6>$ {room.pricePerDay}</h6>\n//               <p>per night</p>\n//             </div>\n//             <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\n//               View\n//             </Link>\n//           </div>\n//           <p className=\"room-info\">{room.typeRoom}</p>\n//         </article>\n//       ))}\n//     </div>\n//   );\n// }\n//\nimport React, { useEffect, useState } from \"react\";\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room({\n  id,\n  onRoomClick\n}) {\n  _s();\n  const [room, setRooms] = useState([]);\n  useEffect(() => {\n    fetchRoomsByIds(id);\n  });\n  const fetchRoomsByIds = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const response = await fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      setRooms(data);\n    } catch (error) {\n      console.error(\"Error fetching rooms:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-list\",\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: defaultImg // Optional chaining and nullish coalescing\n          ,\n          alt: \"single room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"$ \", room.pricePerDay]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"per night\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/rooms/${room.id}`,\n          className: \"btn-primary room-link\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-infoo\",\n        children: room.typeRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, room.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(Room, \"Q//JWuU1erln8ad/90isz0gtxpk=\");\n_c = Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","defaultImg","Link","jsxDEV","_jsxDEV","Room","id","onRoomClick","_s","room","setRooms","fetchRoomsByIds","token","localStorage","getItem","response","fetch","method","headers","Authorization","data","json","console","log","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","pricePerDay","to","typeRoom","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Components/Room/Room.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// // import react-router-dom\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// // import assets\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\n// // import prop-types\r\n// import PropTypes from \"prop-types\";\r\n\r\n// export default function Room({ room }) {\r\n//   const { name, slug, images, price } = room;\r\n\r\n//   return (\r\n//     <article className=\"room\">\r\n//       <div className=\"img-container\">\r\n//         <img src={images[0] || defaultImg} alt=\"single room\" />\r\n\r\n//         <div className=\"price-top\">\r\n//           <h6>$ {price}</h6>\r\n//           <p>per night</p>\r\n//         </div>\r\n\r\n//         <Link to={`/rooms/${slug}`} className=\"btn-primary room-link\">\r\n//           View\r\n//         </Link>\r\n//       </div>\r\n//       <p className=\"room-info\">{name}</p>\r\n//     </article>\r\n//   );\r\n// }\r\n\r\n// Room.prototype = {\r\n//   room: PropTypes.shape({\r\n//     name: PropTypes.string.isRequired,\r\n//     slug: PropTypes.string.isRequired,\r\n//     images: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n//   }),\r\n// };\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\n\r\n// export default function RoomsList() {\r\n//   const [roomIds, setRoomIds] = useState([]);\r\n//   const [rooms, setRooms] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchRoomIds();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (roomIds.length > 0) {\r\n//       fetchRoomsByIds(roomIds);\r\n//     }\r\n//   }, [roomIds]);\r\n\r\n//   const fetchRoomIds = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const response = await fetch(\r\n//         \"http://localhost:8080/hotelManagement/rooms/list-id\",\r\n//         {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         // Ensure `data` is an array and remove duplicates\r\n//         const uniqueRoomIds = new Set(data).size === data.length ? data : [];\r\n//         setRoomIds(uniqueRoomIds);\r\n//       } else {\r\n//         console.error(\"Error fetching room IDs:\", data);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching room IDs:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const fetchRoomsByIds = async (ids) => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const roomPromises = ids.map((id) =>\r\n//         fetch(`http://localhost:8080/hotelManagement/rooms/get-room/${id}`, {\r\n//           method: \"GET\",\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }).then((response) => response.json())\r\n//       );\r\n//       const roomsData = await Promise.all(roomPromises);\r\n\r\n//       // Filter out empty or invalid entries before setting state\r\n//       const validRooms = roomsData.filter((room) => room && room.id);\r\n//       setRooms(validRooms);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching rooms:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"room-list\">\r\n//       {rooms.map((room) => (\r\n//         <article className=\"room\" key={room.id}>\r\n//           <div className=\"img-container\">\r\n//             <img\r\n//               src={\r\n//                 // room.images && room.images.length > 0 ? room.images[0] : defaultImg\r\n//                 //room.images?.[0] ??\r\n//                 defaultImg // Optional chaining and nullish coalescing\r\n//               }\r\n//               alt=\"single room\"\r\n//             />\r\n//             <div className=\"price-top\">\r\n//               <h6>$ {room.pricePerDay}</h6>\r\n//               <p>per night</p>\r\n//             </div>\r\n//             <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n//               View\r\n//             </Link>\r\n//           </div>\r\n//           <p className=\"room-info\">{room.typeRoom}</p>\r\n//         </article>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n//\r\nimport React, { useEffect, useState } from \"react\";\r\nimport defaultImg from \"../../assets/img/jpeg/room-1.jpeg\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nexport default function Room({ id, onRoomClick }) {\r\n  const [room, setRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRoomsByIds(id);\r\n  });\r\n  const fetchRoomsByIds = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await fetch(\r\n        `http://localhost:8080/hotelManagement/rooms/get-room/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setRooms(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching rooms:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-list\">\r\n      <article className=\"room\" key={room.id}>\r\n        <div className=\"img-container\">\r\n          <img\r\n            src={\r\n              defaultImg // Optional chaining and nullish coalescing\r\n            }\r\n            alt=\"single room\"\r\n          />\r\n          <div className=\"price-top\">\r\n            <h6>$ {room.pricePerDay}</h6>\r\n            <p>per night</p>\r\n          </div>\r\n          <Link to={`/rooms/${room.id}`} className=\"btn-primary room-link\">\r\n            View\r\n          </Link>\r\n        </div>\r\n        <p className=\"room-infoo\">{room.typeRoom}</p>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,mCAAmC;AAC1D,SAASC,IAAI,QAAQ,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjE,eAAe,SAASC,IAAIA,CAAC;EAAEC,EAAE;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAC,MAAM;IACdY,eAAe,CAACL,EAAE,CAAC;EACrB,CAAC,CAAC;EACF,MAAMK,eAAe,GAAG,MAAOL,EAAE,IAAK;IACpC,IAAI;MACF,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,wDAAuDV,EAAG,EAAC,EAC5D;QACEW,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,KAAM;QACjC;MACF,CACF,CAAC;MACD,MAAMQ,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBV,QAAQ,CAACU,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBtB,OAAA;MAASqB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACvBtB,OAAA;QAAKqB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BtB,OAAA;UACEuB,GAAG,EACD1B,UAAU,CAAC;UACZ;UACD2B,GAAG,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACF5B,OAAA;UAAKqB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBtB,OAAA;YAAAsB,QAAA,GAAI,IAAE,EAACjB,IAAI,CAACwB,WAAW;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B5B,OAAA;YAAAsB,QAAA,EAAG;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACN5B,OAAA,CAACF,IAAI;UAACgC,EAAE,EAAG,UAASzB,IAAI,CAACH,EAAG,EAAE;UAACmB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAEjE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN5B,OAAA;QAAGqB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEjB,IAAI,CAAC0B;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAhBhBvB,IAAI,CAACH,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiB7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACxB,EAAA,CAhDuBH,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}