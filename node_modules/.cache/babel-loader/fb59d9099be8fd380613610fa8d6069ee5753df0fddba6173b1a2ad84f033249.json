{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATN\\\\FE\\\\Hotel-Management\\\\src\\\\Pages\\\\CreateRoom.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const CreateRoom = () => {\n//   const [type, setType] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [price, setPrice] = useState(\"\");\n//   const [capacity, setCapacity] = useState(\"\");\n//   const [petsAllowed, setPetsAllowed] = useState(false);\n//   const [facilities, setFacilities] = useState([]);\n//   const [images, setImages] = useState({\n//     image1: null,\n//     image2: null,\n//     image3: null,\n//   });\n\n//   const handleFacilityChange = (e) => {\n//     const { value, checked } = e.target;\n//     if (checked) {\n//       setFacilities([...facilities, value]);\n//     } else {\n//       setFacilities(facilities.filter((facility) => facility !== value));\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-room-container\">\n//       <h2>Create Room</h2>\n//       <form>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"type\">Type of Room</label>\n//           <select\n//             id=\"type\"\n//             value={type}\n//             onChange={(e) => setType(e.target.value)}\n//           >\n//             <option value=\"\">Select type</option>\n//             <option value=\"single\">Single</option>\n//             <option value=\"double\">Double</option>\n//             <option value=\"suite\">Suite</option>\n//           </select>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"description\">Description</label>\n//           <textarea\n//             id=\"description\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             rows=\"4\"\n//           ></textarea>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"price\">Price</label>\n//           <input\n//             type=\"number\"\n//             id=\"price\"\n//             value={price}\n//             onChange={(e) => setPrice(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"capacity\">Max Capacity</label>\n//           <input\n//             type=\"number\"\n//             id=\"capacity\"\n//             value={capacity}\n//             onChange={(e) => setCapacity(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               checked={petsAllowed}\n//               onChange={(e) => setPetsAllowed(e.target.checked)}\n//             />\n//             Pets Allowed\n//           </label>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"facilities\">Facilities</label>\n//           <div className=\"create-room-facilities\">\n//             {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\n//               <label key={facility}>\n//                 <input\n//                   type=\"checkbox\"\n//                   value={facility}\n//                   checked={facilities.includes(facility)}\n//                   onChange={handleFacilityChange}\n//                 />\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\n//               </label>\n//             ))}\n//           </div>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label>Upload Images</label>\n//           <div className=\"create-room-images-upload\">\n//             <input\n//               type=\"file\"\n//               onChange={(e) =>\n//                 setImages({ ...images, image1: e.target.files[0] })\n//               }\n//             />\n//             <input\n//               type=\"file\"\n//               onChange={(e) =>\n//                 setImages({ ...images, image2: e.target.files[0] })\n//               }\n//             />\n//             <input\n//               type=\"file\"\n//               onChange={(e) =>\n//                 setImages({ ...images, image3: e.target.files[0] })\n//               }\n//             />\n//           </div>\n//         </div>\n//         <button type=\"submit\" className=\"create-room-submit-btn\">\n//           Create Room\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateRoom;\n// import React, { useState } from \"react\";\n\n// const CreateRoom = () => {\n//   const [type, setType] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [price, setPrice] = useState(\"\");\n//   const [capacity, setCapacity] = useState(\"\");\n//   const [petsAllowed, setPetsAllowed] = useState(false);\n//   const [facilities, setFacilities] = useState([]);\n//   const [images, setImages] = useState({\n//     image1: null,\n//     image2: null,\n//     image3: null,\n//   });\n\n//   const handleFacilityChange = (e) => {\n//     const { value } = e.target;\n//     if (!facilities.includes(value)) {\n//       setFacilities([...facilities, value]);\n//     }\n//   };\n\n//   const handleFacilityRemove = (facility) => {\n//     setFacilities(facilities.filter((f) => f !== facility));\n//   };\n\n//   return (\n//     <div className=\"create-room-container\">\n//       <h2>Create Room</h2>\n//       <form>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"type\">Type of Room</label>\n//           <select\n//             id=\"type\"\n//             value={type}\n//             onChange={(e) => setType(e.target.value)}\n//           >\n//             <option value=\"\">Select type</option>\n//             <option value=\"single\">Single</option>\n//             <option value=\"double\">Double</option>\n//             <option value=\"suite\">Suite</option>\n//           </select>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"description\">Description</label>\n//           <textarea\n//             id=\"description\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             rows=\"4\"\n//           ></textarea>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"price\">Price</label>\n//           <input\n//             type=\"text\"\n//             id=\"price\"\n//             value={price}\n//             onChange={(e) => setPrice(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"capacity\">Max Capacity</label>\n//           <input\n//             type=\"number\"\n//             id=\"capacity\"\n//             value={capacity}\n//             onChange={(e) => setCapacity(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               checked={petsAllowed}\n//               onChange={(e) => setPetsAllowed(e.target.checked)}\n//             />\n//             Pets Allowed\n//           </label>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"facilities\">Facilities</label>\n//           <select id=\"facilities\" onChange={handleFacilityChange}>\n//             <option value=\"\">Select facility</option>\n//             {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\n//               <option key={facility} value={facility}>\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\n//               </option>\n//             ))}\n//           </select>\n//           <div className=\"selected-facilities\">\n//             {facilities.map((facility) => (\n//               <div key={facility} className=\"facility-item\">\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => handleFacilityRemove(facility)}\n//                 >\n//                   X\n//                 </button>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label>Upload Images</label>\n//           <div className=\"create-room-images-upload\">\n//             <input\n//               type=\"file\"\n//               onChange={(e) =>\n//                 setImages({ ...images, image1: e.target.files[0] })\n//               }\n//             />\n//             <input\n//               type=\"file\"\n//               onChange={(e) =>\n//                 setImages({ ...images, image2: e.target.files[0] })\n//               }\n//             />\n//             <input\n//               type=\"file\"\n//               onChange={(e) =>\n//                 setImages({ ...images, image3: e.target.files[0] })\n//               }\n//             />\n//           </div>\n//         </div>\n//         <button type=\"submit\" className=\"create-room-submit-btn\">\n//           Create Room\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n//export default CreateRoom;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateRoom = () => {\n  _s();\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [petsAllowed, setPetsAllowed] = useState(false);\n  const [facilities, setFacilities] = useState([]);\n  const [images, setImages] = useState({\n    image1: null,\n    image2: null,\n    image3: null\n  });\n  const handleFacilityChange = e => {\n    const {\n      value\n    } = e.target;\n    if (!facilities.includes(value)) {\n      setFacilities([...facilities, value]);\n    }\n  };\n  const handleFacilityRemove = facility => {\n    setFacilities(facilities.filter(f => f !== facility));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"typeRoom\", type);\n    formData.append(\"description\", description);\n    formData.append(\"pricePerDay\", price);\n    formData.append(\"maxCapacity\", capacity);\n    formData.append(\"allowPet\", petsAllowed);\n    facilities.forEach((facility, index) => {\n      formData.append(\"facilities\", facility);\n    });\n    if (images.image1) formData.append(\"images\", images.image1);\n    if (images.image2) formData.append(\"images\", images.image2);\n    if (images.image3) formData.append(\"images\", images.image3);\n    try {\n      const response = await axios.post(\"http://localhost:8080/hotelManagement/rooms/create-room\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Room created successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error creating room:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"type\",\n          children: \"Type of Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"type\",\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"single\",\n            children: \"Single\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"double\",\n            children: \"Double\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"suite\",\n            children: \"Suite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"price\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capacity\",\n          children: \"Max Capacity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"capacity\",\n          value: capacity,\n          onChange: e => setCapacity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: petsAllowed,\n            onChange: e => setPetsAllowed(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), \"Pets Allowed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"facilities\",\n          children: \"Facilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"facilities\",\n          onChange: handleFacilityChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select facility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), [\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map(facility => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: facility,\n            children: facility.charAt(0).toUpperCase() + facility.slice(1)\n          }, facility, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-facilities\",\n          children: facilities.map(facility => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"facility-item\",\n            children: [facility.charAt(0).toUpperCase() + facility.slice(1), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleFacilityRemove(facility),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, facility, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-room-images-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImages({\n              ...images,\n              image1: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImages({\n              ...images,\n              image2: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setImages({\n              ...images,\n              image3: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"create-room-submit-btn\",\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateRoom, \"l1BWDcbNrqva183gb5F/enbsmvs=\");\n_c = CreateRoom;\nexport default CreateRoom;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const CreateRoom = () => {\n//   const [type, setType] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [price, setPrice] = useState(\"\");\n//   const [capacity, setCapacity] = useState(\"\");\n//   const [petsAllowed, setPetsAllowed] = useState(false);\n//   const [facilities, setFacilities] = useState([]);\n//   const [images, setImages] = useState({\n//     image1: null,\n//     image2: null,\n//     image3: null,\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState(\"\");\n\n//   const handleFacilityChange = (e) => {\n//     const { value } = e.target;\n//     if (!facilities.includes(value)) {\n//       setFacilities([...facilities, value]);\n//     } else {\n//       setFacilities(facilities.filter((f) => f !== value));\n//     }\n//   };\n\n//   const handleImageChange = (e, imageKey) => {\n//     setImages((prevImages) => ({\n//       ...prevImages,\n//       [imageKey]: e.target.files[0],\n//     }));\n//   };\n\n//   const resetForm = () => {\n//     setType(\"\");\n//     setDescription(\"\");\n//     setPrice(\"\");\n//     setCapacity(\"\");\n//     setPetsAllowed(false);\n//     setFacilities([]);\n//     setImages({ image1: null, image2: null, image3: null });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setMessage(\"\");\n\n//     const formData = new FormData();\n//     formData.append(\"typeRoom\", type);\n//     formData.append(\"description\", description);\n//     formData.append(\"pricePerDay\", price);\n//     formData.append(\"maxCapacity\", capacity);\n//     formData.append(\"allowPet\", petsAllowed);\n//     facilities.forEach((facility, index) => {\n//       formData.append(`facilities[${index}]`, facility);\n//     });\n//     formData.append(\"images\", images.image1);\n//     formData.append(\"images\", images.image2);\n//     formData.append(\"images\", images.image3);\n\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       const response = await axios.post(\n//         \"http://localhost:8080/hotelManagement/rooms/create-room\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       console.log(\"Room created successfully:\", response.data);\n//       setMessage(\"Room created successfully!\");\n//       resetForm();\n//     } catch (error) {\n//       console.error(\"Error creating room:\", error);\n//       setMessage(\"Error creating room. Please try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-room-container\">\n//       <h2>Create Room</h2>\n//       {message && <p>{message}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"type\">Type of Room</label>\n//           <select\n//             id=\"type\"\n//             value={type}\n//             onChange={(e) => setType(e.target.value)}\n//           >\n//             <option value=\"\">Select type</option>\n//             <option value=\"single\">Single</option>\n//             <option value=\"double\">Double</option>\n//             <option value=\"suite\">Suite</option>\n//           </select>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"description\">Description</label>\n//           <textarea\n//             id=\"description\"\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             rows=\"4\"\n//           ></textarea>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"price\">Price</label>\n//           <input\n//             type=\"number\"\n//             id=\"price\"\n//             value={price}\n//             onChange={(e) => setPrice(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"capacity\">Max Capacity</label>\n//           <input\n//             type=\"number\"\n//             id=\"capacity\"\n//             value={capacity}\n//             onChange={(e) => setCapacity(e.target.value)}\n//           />\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label>\n//             <input\n//               type=\"checkbox\"\n//               checked={petsAllowed}\n//               onChange={(e) => setPetsAllowed(e.target.checked)}\n//             />\n//             Pets Allowed\n//           </label>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label htmlFor=\"facilities\">Facilities</label>\n//           <div className=\"create-room-facilities\">\n//             {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\n//               <label key={facility}>\n//                 <input\n//                   type=\"checkbox\"\n//                   value={facility}\n//                   checked={facilities.includes(facility)}\n//                   onChange={handleFacilityChange}\n//                 />\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\n//               </label>\n//             ))}\n//           </div>\n//         </div>\n//         <div className=\"create-room-form-group\">\n//           <label>Upload Images</label>\n//           <div className=\"create-room-images-upload\">\n//             <input\n//               type=\"file\"\n//               onChange={(e) => handleImageChange(e, \"image1\")}\n//             />\n//             <input\n//               type=\"file\"\n//               onChange={(e) => handleImageChange(e, \"image2\")}\n//             />\n//             <input\n//               type=\"file\"\n//               onChange={(e) => handleImageChange(e, \"image3\")}\n//             />\n//           </div>\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"create-room-submit-btn\"\n//           disabled={loading}\n//         >\n//           {loading ? \"Creating...\" : \"Create Room\"}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateRoom;\nvar _c;\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateRoom","_s","type","setType","description","setDescription","price","setPrice","capacity","setCapacity","petsAllowed","setPetsAllowed","facilities","setFacilities","images","setImages","image1","image2","image3","handleFacilityChange","e","value","target","includes","handleFacilityRemove","facility","filter","f","handleSubmit","preventDefault","formData","FormData","append","forEach","index","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","rows","checked","map","charAt","toUpperCase","slice","onClick","files","_c","$RefreshReg$"],"sources":["D:/DATN/FE/Hotel-Management/src/Pages/CreateRoom.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// const CreateRoom = () => {\r\n//   const [type, setType] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [capacity, setCapacity] = useState(\"\");\r\n//   const [petsAllowed, setPetsAllowed] = useState(false);\r\n//   const [facilities, setFacilities] = useState([]);\r\n//   const [images, setImages] = useState({\r\n//     image1: null,\r\n//     image2: null,\r\n//     image3: null,\r\n//   });\r\n\r\n//   const handleFacilityChange = (e) => {\r\n//     const { value, checked } = e.target;\r\n//     if (checked) {\r\n//       setFacilities([...facilities, value]);\r\n//     } else {\r\n//       setFacilities(facilities.filter((facility) => facility !== value));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"create-room-container\">\r\n//       <h2>Create Room</h2>\r\n//       <form>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"type\">Type of Room</label>\r\n//           <select\r\n//             id=\"type\"\r\n//             value={type}\r\n//             onChange={(e) => setType(e.target.value)}\r\n//           >\r\n//             <option value=\"\">Select type</option>\r\n//             <option value=\"single\">Single</option>\r\n//             <option value=\"double\">Double</option>\r\n//             <option value=\"suite\">Suite</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"description\">Description</label>\r\n//           <textarea\r\n//             id=\"description\"\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             rows=\"4\"\r\n//           ></textarea>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"price\">Price</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"price\"\r\n//             value={price}\r\n//             onChange={(e) => setPrice(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"capacity\">Max Capacity</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"capacity\"\r\n//             value={capacity}\r\n//             onChange={(e) => setCapacity(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={petsAllowed}\r\n//               onChange={(e) => setPetsAllowed(e.target.checked)}\r\n//             />\r\n//             Pets Allowed\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"facilities\">Facilities</label>\r\n//           <div className=\"create-room-facilities\">\r\n//             {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\r\n//               <label key={facility}>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   value={facility}\r\n//                   checked={facilities.includes(facility)}\r\n//                   onChange={handleFacilityChange}\r\n//                 />\r\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\r\n//               </label>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label>Upload Images</label>\r\n//           <div className=\"create-room-images-upload\">\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) =>\r\n//                 setImages({ ...images, image1: e.target.files[0] })\r\n//               }\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) =>\r\n//                 setImages({ ...images, image2: e.target.files[0] })\r\n//               }\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) =>\r\n//                 setImages({ ...images, image3: e.target.files[0] })\r\n//               }\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <button type=\"submit\" className=\"create-room-submit-btn\">\r\n//           Create Room\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateRoom;\r\n// import React, { useState } from \"react\";\r\n\r\n// const CreateRoom = () => {\r\n//   const [type, setType] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [capacity, setCapacity] = useState(\"\");\r\n//   const [petsAllowed, setPetsAllowed] = useState(false);\r\n//   const [facilities, setFacilities] = useState([]);\r\n//   const [images, setImages] = useState({\r\n//     image1: null,\r\n//     image2: null,\r\n//     image3: null,\r\n//   });\r\n\r\n//   const handleFacilityChange = (e) => {\r\n//     const { value } = e.target;\r\n//     if (!facilities.includes(value)) {\r\n//       setFacilities([...facilities, value]);\r\n//     }\r\n//   };\r\n\r\n//   const handleFacilityRemove = (facility) => {\r\n//     setFacilities(facilities.filter((f) => f !== facility));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"create-room-container\">\r\n//       <h2>Create Room</h2>\r\n//       <form>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"type\">Type of Room</label>\r\n//           <select\r\n//             id=\"type\"\r\n//             value={type}\r\n//             onChange={(e) => setType(e.target.value)}\r\n//           >\r\n//             <option value=\"\">Select type</option>\r\n//             <option value=\"single\">Single</option>\r\n//             <option value=\"double\">Double</option>\r\n//             <option value=\"suite\">Suite</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"description\">Description</label>\r\n//           <textarea\r\n//             id=\"description\"\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             rows=\"4\"\r\n//           ></textarea>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"price\">Price</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"price\"\r\n//             value={price}\r\n//             onChange={(e) => setPrice(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"capacity\">Max Capacity</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"capacity\"\r\n//             value={capacity}\r\n//             onChange={(e) => setCapacity(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={petsAllowed}\r\n//               onChange={(e) => setPetsAllowed(e.target.checked)}\r\n//             />\r\n//             Pets Allowed\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"facilities\">Facilities</label>\r\n//           <select id=\"facilities\" onChange={handleFacilityChange}>\r\n//             <option value=\"\">Select facility</option>\r\n//             {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\r\n//               <option key={facility} value={facility}>\r\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <div className=\"selected-facilities\">\r\n//             {facilities.map((facility) => (\r\n//               <div key={facility} className=\"facility-item\">\r\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => handleFacilityRemove(facility)}\r\n//                 >\r\n//                   X\r\n//                 </button>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label>Upload Images</label>\r\n//           <div className=\"create-room-images-upload\">\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) =>\r\n//                 setImages({ ...images, image1: e.target.files[0] })\r\n//               }\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) =>\r\n//                 setImages({ ...images, image2: e.target.files[0] })\r\n//               }\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) =>\r\n//                 setImages({ ...images, image3: e.target.files[0] })\r\n//               }\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <button type=\"submit\" className=\"create-room-submit-btn\">\r\n//           Create Room\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//export default CreateRoom;\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CreateRoom = () => {\r\n  const [type, setType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const [petsAllowed, setPetsAllowed] = useState(false);\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [images, setImages] = useState({\r\n    image1: null,\r\n    image2: null,\r\n    image3: null,\r\n  });\r\n\r\n  const handleFacilityChange = (e) => {\r\n    const { value } = e.target;\r\n    if (!facilities.includes(value)) {\r\n      setFacilities([...facilities, value]);\r\n    }\r\n  };\r\n\r\n  const handleFacilityRemove = (facility) => {\r\n    setFacilities(facilities.filter((f) => f !== facility));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"typeRoom\", type);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"pricePerDay\", price);\r\n    formData.append(\"maxCapacity\", capacity);\r\n    formData.append(\"allowPet\", petsAllowed);\r\n    facilities.forEach((facility, index) => {\r\n      formData.append(\"facilities\", facility);\r\n    });\r\n    if (images.image1) formData.append(\"images\", images.image1);\r\n    if (images.image2) formData.append(\"images\", images.image2);\r\n    if (images.image3) formData.append(\"images\", images.image3);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/hotelManagement/rooms/create-room\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Room created successfully:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error creating room:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-room-container\">\r\n      <h2>Create Room</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"create-room-form-group\">\r\n          <label htmlFor=\"type\">Type of Room</label>\r\n          <select\r\n            id=\"type\"\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n          >\r\n            <option value=\"\">Select type</option>\r\n            <option value=\"single\">Single</option>\r\n            <option value=\"double\">Double</option>\r\n            <option value=\"suite\">Suite</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"create-room-form-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"create-room-form-group\">\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"price\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"create-room-form-group\">\r\n          <label htmlFor=\"capacity\">Max Capacity</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"capacity\"\r\n            value={capacity}\r\n            onChange={(e) => setCapacity(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"create-room-form-group\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={petsAllowed}\r\n              onChange={(e) => setPetsAllowed(e.target.checked)}\r\n            />\r\n            Pets Allowed\r\n          </label>\r\n        </div>\r\n        <div className=\"create-room-form-group\">\r\n          <label htmlFor=\"facilities\">Facilities</label>\r\n          <select id=\"facilities\" onChange={handleFacilityChange}>\r\n            <option value=\"\">Select facility</option>\r\n            {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\r\n              <option key={facility} value={facility}>\r\n                {facility.charAt(0).toUpperCase() + facility.slice(1)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <div className=\"selected-facilities\">\r\n            {facilities.map((facility) => (\r\n              <div key={facility} className=\"facility-item\">\r\n                {facility.charAt(0).toUpperCase() + facility.slice(1)}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleFacilityRemove(facility)}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"create-room-form-group\">\r\n          <label>Upload Images</label>\r\n          <div className=\"create-room-images-upload\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) =>\r\n                setImages({ ...images, image1: e.target.files[0] })\r\n              }\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) =>\r\n                setImages({ ...images, image2: e.target.files[0] })\r\n              }\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) =>\r\n                setImages({ ...images, image3: e.target.files[0] })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"create-room-submit-btn\">\r\n          Create Room\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoom;\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const CreateRoom = () => {\r\n//   const [type, setType] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [price, setPrice] = useState(\"\");\r\n//   const [capacity, setCapacity] = useState(\"\");\r\n//   const [petsAllowed, setPetsAllowed] = useState(false);\r\n//   const [facilities, setFacilities] = useState([]);\r\n//   const [images, setImages] = useState({\r\n//     image1: null,\r\n//     image2: null,\r\n//     image3: null,\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const handleFacilityChange = (e) => {\r\n//     const { value } = e.target;\r\n//     if (!facilities.includes(value)) {\r\n//       setFacilities([...facilities, value]);\r\n//     } else {\r\n//       setFacilities(facilities.filter((f) => f !== value));\r\n//     }\r\n//   };\r\n\r\n//   const handleImageChange = (e, imageKey) => {\r\n//     setImages((prevImages) => ({\r\n//       ...prevImages,\r\n//       [imageKey]: e.target.files[0],\r\n//     }));\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setType(\"\");\r\n//     setDescription(\"\");\r\n//     setPrice(\"\");\r\n//     setCapacity(\"\");\r\n//     setPetsAllowed(false);\r\n//     setFacilities([]);\r\n//     setImages({ image1: null, image2: null, image3: null });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setMessage(\"\");\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"typeRoom\", type);\r\n//     formData.append(\"description\", description);\r\n//     formData.append(\"pricePerDay\", price);\r\n//     formData.append(\"maxCapacity\", capacity);\r\n//     formData.append(\"allowPet\", petsAllowed);\r\n//     facilities.forEach((facility, index) => {\r\n//       formData.append(`facilities[${index}]`, facility);\r\n//     });\r\n//     formData.append(\"images\", images.image1);\r\n//     formData.append(\"images\", images.image2);\r\n//     formData.append(\"images\", images.image3);\r\n\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const response = await axios.post(\r\n//         \"http://localhost:8080/hotelManagement/rooms/create-room\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       console.log(\"Room created successfully:\", response.data);\r\n//       setMessage(\"Room created successfully!\");\r\n//       resetForm();\r\n//     } catch (error) {\r\n//       console.error(\"Error creating room:\", error);\r\n//       setMessage(\"Error creating room. Please try again.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"create-room-container\">\r\n//       <h2>Create Room</h2>\r\n//       {message && <p>{message}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"type\">Type of Room</label>\r\n//           <select\r\n//             id=\"type\"\r\n//             value={type}\r\n//             onChange={(e) => setType(e.target.value)}\r\n//           >\r\n//             <option value=\"\">Select type</option>\r\n//             <option value=\"single\">Single</option>\r\n//             <option value=\"double\">Double</option>\r\n//             <option value=\"suite\">Suite</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"description\">Description</label>\r\n//           <textarea\r\n//             id=\"description\"\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             rows=\"4\"\r\n//           ></textarea>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"price\">Price</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"price\"\r\n//             value={price}\r\n//             onChange={(e) => setPrice(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"capacity\">Max Capacity</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"capacity\"\r\n//             value={capacity}\r\n//             onChange={(e) => setCapacity(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={petsAllowed}\r\n//               onChange={(e) => setPetsAllowed(e.target.checked)}\r\n//             />\r\n//             Pets Allowed\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label htmlFor=\"facilities\">Facilities</label>\r\n//           <div className=\"create-room-facilities\">\r\n//             {[\"wifi\", \"parking\", \"pool\", \"gym\", \"spa\"].map((facility) => (\r\n//               <label key={facility}>\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   value={facility}\r\n//                   checked={facilities.includes(facility)}\r\n//                   onChange={handleFacilityChange}\r\n//                 />\r\n//                 {facility.charAt(0).toUpperCase() + facility.slice(1)}\r\n//               </label>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"create-room-form-group\">\r\n//           <label>Upload Images</label>\r\n//           <div className=\"create-room-images-upload\">\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) => handleImageChange(e, \"image1\")}\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) => handleImageChange(e, \"image2\")}\r\n//             />\r\n//             <input\r\n//               type=\"file\"\r\n//               onChange={(e) => handleImageChange(e, \"image3\")}\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"create-room-submit-btn\"\r\n//           disabled={loading}\r\n//         >\r\n//           {loading ? \"Creating...\" : \"Create Room\"}\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateRoom;\r\n"],"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}